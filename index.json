[{"categories":["life"],"content":"1引言 本篇博客本来四月份就要写的, 拖延症加懒癌一直今天才见文. 写之前多有犹豫, 一是文笔不好, 二是因为我本人也仅仅是艰难毕业艰难就业罢了, 实在没有资格给别人建议. 今天趁着下班比较早(底层模鱼人的胜利), 一股脑胡乱写了出来, 如果我的经验能给你任何的帮助或者参考, 那也算是很值得的了. 我许多看法都是从«上海交通大学生存手册\u003e 获益而来, 在此深表感谢. 这个小册子于08年由一群交大本科生写就，强烈推荐大家有空的时候读一读. 原作者团队主要属于出国攻读博士群体, 在关于如何立志等问题该手册有着更深入的思考, 我仅在本文补充一些关于国内就业的粗浅见解. 且因为我目前从事行业的问题, 所以经验更多的是偏向于计算机方面. ","date":"2021-09-09","objectID":"https://nowislewis.github.io/posts/%E6%AF%95%E4%B8%9A%E4%B8%AA%E4%BA%BA%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97%E4%B8%80/:1:0","tags":["project"],"title":"毕业个人踩坑指北(一)–\"价值\"篇","uri":"https://nowislewis.github.io/posts/%E6%AF%95%E4%B8%9A%E4%B8%AA%E4%BA%BA%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97%E4%B8%80/"},{"categories":["life"],"content":"2最沉重的价值 说起找工作, 却需要先谈起鸡汤. 因为这在我看来是顶重要的事情, 贯彻着读书, 工作以及生活, 是抉择事物的核心点. 平常大家都习惯了用金钱的多寡去衡量一样东西的价值, 比如美食的花费, 衣服的价格, 汽车乃至房产的价值等等. 但无形的东西很难这样考虑, 比如健康, 比如知识, 比如亲情和朋友. 而我想强调的, 便是用时间作为一种衡量标准. 人的时间便是一笔投资, 举个例子: “如果你手上现在有五百万现金，你打算如何投资？也许你会拿这笔钱炒股炒房炒汇炒基金，或者是开公司开厂房倒买倒卖做生意。但我想，我们这样年纪的人，很少有人会认同把那笔钱换成金银珠宝，放到保险箱里存起来。当然了，看近年通货膨胀的架势，把钱存进银行吃到的利息估计还赶不上贬值的速度。” 我们之所以不认同换金银保值的想法，是因为我们知道，拥有这笔财富不应意味着坐吃山空，它们应当蕴含更大的力量，带来更广阔的机遇，在我们的操纵中产生出更为丰盛的回报. 相比于读书的开销乃至生活消费, 我们每个人最沉重的财富, 其实是青春, 是时间. 遗憾的是, 无论我们做的有没有意义，哪怕什么也不做，时间仍在流逝。 那么, 为什么我们不从时间尺度上去衡量一项事物的价值呢. 一件事对我们影响的时间越长, 就意味着这件事的价值越高. \" 花同样的功夫，我们应该尽量多做那些对整个人生都产生正面影响的事情，少做对中期的未来产生影响的事情，不做只对近期产生影响的事情。而产生负面影响的事情应当尽可能避免。 \" 从这个角度讲, 花时间刷网页可以给我们带来几十分钟乃至一天的快乐, 花时间做有意义的工作能让我们受益几年, 而花时间陪伴家人以及健身则能让我们受益终身. 哪怕我接下来的经验对你没有帮助, 也希望你能够思考一下当下做的事情是否有过时间上的考量. 不管参加什么样的工作或者做什么样的研究, 首先应当询问自己一个问题: 参加这样的工作, 是否正在以过于低廉的价格出卖自己的时间? ","date":"2021-09-09","objectID":"https://nowislewis.github.io/posts/%E6%AF%95%E4%B8%9A%E4%B8%AA%E4%BA%BA%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97%E4%B8%80/:2:0","tags":["project"],"title":"毕业个人踩坑指北(一)–\"价值\"篇","uri":"https://nowislewis.github.io/posts/%E6%AF%95%E4%B8%9A%E4%B8%AA%E4%BA%BA%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97%E4%B8%80/"},{"categories":null,"content":"1tree-sitter 简介 tree-sitter 是一个速度很快的语法parser, 支持incremental parsing, error recovery 等等很有用的功能. 对于编辑器的优点在于 引用官网的一段介绍: Tree-sitter is a parser generator tool and an incremental parsing library. It can build a concrete syntax tree for a source file and efficiently update the syntax tree as the source file is edited. Tree-sitter aims to be: General enough to parse any programming language Fast enough to parse on every keystroke in a text editor Robust enough to provide useful results even in the presence of syntax errors Dependency-free so that the runtime library (which is written in pure C) can be embedded in any application 目前已经支持C/C++ Go 等几十种语言. 但官方给的二进制文件是 x86 的, 因此对于 MacBook 的arm 架构是无法使用的, 需要自己编译. tree-sitter 的依赖不多, 但在 m1 上的编译资料较少, 这里给出一个自己摸索的解决方案. ","date":"2021-08-28","objectID":"https://nowislewis.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8apple-siliconm1%E4%B8%8A%E7%BC%96%E8%AF%91tree-sitter/:1:0","tags":["project"],"title":"如何在Apple Silicon(M1)上编译tree-sitter","uri":"https://nowislewis.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8apple-siliconm1%E4%B8%8A%E7%BC%96%E8%AF%91tree-sitter/"},{"categories":null,"content":"2环境准备 tree-sitter 依赖 Rust, npm 等环境, 可通过以下命令安装快速安装: brew install cargo git npm llvm rust 后续的步骤部分参考了 这个 issue , 但它指出最新的 tree-sitter v0.20存在BUG 问题难以编译成功. 本人测试问题已经解决, 只需稍做修改即可, 因此我们直接选择最新版本: test -d rust-tree-sitter # clone 仓库 git clone https://github.com/tree-sitter/tree-sitter rust-tree-sitter # 切换分支 cd rust-tree-sitter \u0026\u0026 git fetch 如果上述步骤都进行后, 当前目录应该是这样: ","date":"2021-08-28","objectID":"https://nowislewis.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8apple-siliconm1%E4%B8%8A%E7%BC%96%E8%AF%91tree-sitter/:2:0","tags":["project"],"title":"如何在Apple Silicon(M1)上编译tree-sitter","uri":"https://nowislewis.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8apple-siliconm1%E4%B8%8A%E7%BC%96%E8%AF%91tree-sitter/"},{"categories":null,"content":"3开始编译 接着, 切换到 cli 目录: cd cli \u0026\u0026 cargo install --path . 注意 --path 的后面有一个 . . 这里有一个坑, 如果你像我一样设置了用 GNU/gcc 覆盖了 llvm-gcc, 就需要在 .zshrc 里面注释掉这些代码: #alias gcc='gcc-11' #alias cc='gcc-11' #alias g++='g++-11' #alias c++='c++-11' 可以通过 gcc --version 来简单确认现在使用的版本, 结果大概是这样: liuyi@liuyideMacBook-Pro cli % gcc --version Configured with: --prefix=/Library/Developer/CommandLineTools/usr --with-gxx-include-dir=/usr/include/c++/4.2.1 Apple clang version 12.0.5 (clang-1205.0.22.9) Target: arm64-apple-darwin20.6.0 Thread model: posix InstalledDir: /Library/Developer/CommandLineTools/usr/bin ","date":"2021-08-28","objectID":"https://nowislewis.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8apple-siliconm1%E4%B8%8A%E7%BC%96%E8%AF%91tree-sitter/:3:0","tags":["project"],"title":"如何在Apple Silicon(M1)上编译tree-sitter","uri":"https://nowislewis.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8apple-siliconm1%E4%B8%8A%E7%BC%96%E8%AF%91tree-sitter/"},{"categories":null,"content":"4语言编译 接下来的步骤涉及编辑器的实现版本, 我使用的是emacs, 涉及到elisp-tree-sitter 项目, 其他编辑器需要去找类似的版本, 步骤大同小异: cd PROJECT_DIR_YOU_USE # 这个替换成你的项目路径 file cor/tsc.dyn.dylib | grep -q arm64 || rm-rf core/tsc-dyn.dylib grep -q LOCAL core/DYN-VERSION || printf LOCAL \u003ecore/DYN-VERSION grep -q DYN-VERSION bin/build \u0026\u0026 sed -q '/DYN-VERSION/d' bin/build \u003ebin/build.tmp \u0026\u0026 mv bin/build.tmp bin/build \u0026\u0026 chmod +x bin/build || : 然后重建 bindings EMACS=emacs ./bin/setup \u0026\u0026 EMACS=emacs ./bin/build 然后把相关文件添加到项目的启动路径就可以了. ","date":"2021-08-28","objectID":"https://nowislewis.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8apple-siliconm1%E4%B8%8A%E7%BC%96%E8%AF%91tree-sitter/:4:0","tags":["project"],"title":"如何在Apple Silicon(M1)上编译tree-sitter","uri":"https://nowislewis.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8apple-siliconm1%E4%B8%8A%E7%BC%96%E8%AF%91tree-sitter/"},{"categories":["tools"],"content":"1起因 随着工作和学习中资料和知识的不断积累, 经常处于“输入多, 输出少”的状态。这种状态不利于对于知识的吸收和消化。在费曼学习法中指出,“教会别人”是一种高效的学习方式，因此本文希望能通过自己对于原始知识的反哺, 既帮助了有需要的读者, 也能进一步提升对于知识的理解力。 个人偏好网状的学习方案，寻找不同知识的共通性和串联点，在学习和工作中积累了大量的零散笔记，我会尽量以博客的形式对值得分享的内容进一步整合, 希望这种书写方式能够给读者带来启发。 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:1:0","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"2搭建方案权衡 常见的博客搭建方式有很多种，例如在CSDN、博客园等网站上注册账号发表内容，这种方式具有较高的SEO，博主的文章可以很容易被百度搜索等方式获取，阅读量和评论量都会较为可观，但存在大量同类复制问题，低质量甚至无效内容较多。另一种方式是搭建个人网站，依托服务器部署等方式，个人拥有对网站形式和内容的完全掌控力, 但过程较为繁琐且存在维护成本。 本文经过权衡选择第二种方式进行搭建，因为本文的初衷是个人知识体系的整合输出，且隐私性和聚合性也是主要考虑因素。在尝试了大量的现有方案后，最使用成熟的hugo网页生成方案, 托管在个人github pages页面减少维护成本；使用utteranc作为评论方式。接下来本文会对搭建流程及不同方案选择原因进行描述。 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:2:0","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"3搭建流程 本文最终采用的搭建流程图如下： 流程图如下: ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:3:0","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"3.1生成markdown 本文使用org编写，因此需要ox-hugo生成符合hugo要求的文件。如果读者熟悉markdown，可以参考hugo官方的格式要求编写文章，跳过本小节从“github repo”步骤看起。 org是一种功能强大的文本格式，依托于emacs可完成笔记撰写和知识管理等多项要求。使用ox-hugo，经过简单的配置即可在指定的路径下生成文件。其中需要设置的参数有如下几个： #+hugo_base_dir，表示输出文件的路径 #+hugo_section, 表示输出文件的类别和父路径，官方推荐为 post 或者 blog ，也可自行设置。博客的输出分为两种方式，一种是依托于org mode的subtree结构，每个subtree是一个blog。另一种是每个org文件是一个blog。本文采用第一种方式，这种方式需要在每个需要输出的subtree下面显式的注明 EXPORT_FILE_NAME 。 在设置完毕后，执行 C-c C-e H A 即可按照subtree的方式输出多个markdown文件。 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:3:1","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"3.2GitHub repo 本文将最终的html文件托管在github pages上，方便阅读。这里分为两种方式： 本文生成html文件上传； 上传笔记源文件通过github action自动推送到github pages所在repo。 在对两种方式都进行体验的结果上，出于懒癌本文采用了第二种方案。 GitHub pages也有两种生成方案，一种是github个人主页，另一种是项目托管主页。本文最开始采用单项目托管的方式，后来在使用loveit主题时存在图片路径不正确的问题，因此迁移到github个人主页的方式进行托管, 因此本文会主要阐述这种方案。 共分为两步： 以github.io为结尾的仓库，该仓库用于存储博客页面，用户无需改动； source仓库，该仓库默认私密，存储原始文档。通过action检测到source仓库中笔记文件的修改后，会自动调用github actions 推送博客网页到github.io仓库，免去了本地生成网页的麻烦。 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:3:2","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"3.3评论系统选择 本站最初使用gitalk方案搭建评论系统，但存在索取权限过高问题，经过调研，对比了Vline等方案，最终选择utteranc方案。Utteranc相比需要第三方授权的方案，其利用issue的特性使其拥有对评论内容的完全备份性，可以随时迁出，避免了丢失的可能；其次，utteranc只需一次单repo的授权，对权限的要求大幅缩减，保证了安全性。 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:3:3","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"4遇到的问题及解决方法 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:4:0","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"4.1无法正常显示图片 本文最开始使用单项目单page 的方式，但发现在loveit 的主题下无法正常显示图片，因此最终使用了 GitHub.io 的方式搭建，这种方法的缺点是只能拥有这一个地址，且需要另一个 repo 来负责存储 action 的 souce 文件。 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:4:1","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"4.2导出路径 本文在迁移的时候，报错了许多问题，其中一个问题是导出路径要设置为 ./public 。 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:4:2","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"4.3搜索问题： 需要同时设置 lunr 和output ，需要显式写在 taml 文件中，在 loveit 的官方文档中指出了默认参数，但不在 taml 中声明的话是无效的。 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:4:3","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"5添加访问量 不蒜子是一个通过仅仅两行代码实现的网页流量计数器 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:5:0","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"5.1设置使用custom 代码 在 config.toml 中添加如下代码: [params.footer] enable = true custom='' # 在这里添加下面的代码 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:5:1","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"5.2引入js 脚本: \u003cscript async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"\u003e\u003c/script\u003e ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:5:2","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"5.3在页面添加统计代码 分为两种, 一种是 pv , 即记录总访问数; 另一种是 uv , 即单访客点击任意次数均为1 次. \u003cspan id=\"busuanzi_container_site_pv\"\u003e 本站访问量：\u003cspan id=\"busuanzi_value_site_pv\"\u003e\u003c/span\u003e次 \u003c/span\u003e \u0026nbsp; \u003cspan id=\"busuanzi_container_site_uv\"\u003e 您是本站第 \u003cspan id=\"busuanzi_value_site_uv\"\u003e\u003c/span\u003e 位访问者 \u003c/span\u003e ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:5:3","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"},{"categories":["tools"],"content":"5.4在单页面中添加以下代码 \u003ch5 id=\"wc\" style=\"font-size: 1rem;text-align: center;\"\u003e{{ .FuzzyWordCount }} Words|Read in about {{ .ReadingTime }} Min|本文总阅读量\u003cspan id=\"busuanzi_value_page_pv\"\u003e\u003c/span\u003e次\u003c/h5\u003e 可根据个人喜好选择放在文章头部或尾部 ","date":"2021-05-26","objectID":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/:5:4","tags":["project"],"title":"博客的搭建结构","uri":"https://nowislewis.github.io/posts/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E7%BB%93%E6%9E%84/"}]